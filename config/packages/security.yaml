security:

    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        our_db_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            # to parse all URL by the firewall
            pattern: ^/
            http_basic: ~
            provider: our_db_provider
            user_checker: App\Security\UserChecker

            # home page accessible to everyone
            anonymous: true

            form_login:
                login_path: login
                check_path: login
                # form security
                csrf_token_generator: security.csrf.token_manager
                # defaut page after success login
                default_target_path: /package
            logout:
                path:  /logout
                target: /

    role_hierarchy:
         ROLE_ADMIN:      ROLE_USER
         ROLE_SUPER_ADMIN: ROLE_ADMIN

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/package, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/package/category, roles: ROLE_ADMIN }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/user, roles: ROLE_SUPER_ADMIN }
